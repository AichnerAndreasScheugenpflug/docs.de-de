### YamlMime:Tutorial
title: <span data-ttu-id="7dd56-101">Verwenden formatierter Zeichenfolgen mit der Zeichenfolgeninterpolation</span><span class="sxs-lookup"><span data-stu-id="7dd56-101">Use string interpolation to construct formatted strings</span></span>
metadata:
  title: Zeichenfolgeninterpolation – Interaktives C#-Tutorial
  description: In diesem Tutorial verwenden Sie Ihren Browser, um das Zeichenfolgeninterpolationsfeature in C# interaktiv kennenzulernen. Sie schreiben direkt im Browser einen C#-Code und sehen dort die Ergebnisse der Kompilierung und Ausführung Ihres Codes.
  audience: Developer
  ms.custom: mvc
  ms.date: 08/24/2018
  level: Beginner
  displayType: two-column
  interactive: csharp
  nextTutorialHref: list-collection.yml
  nextTutorialTitle: <span data-ttu-id="7dd56-105">Sammlungen in C#</span><span class="sxs-lookup"><span data-stu-id="7dd56-105">Collections in C#</span></span>
  ms.openlocfilehash: c5d9ba80df952a58740ac2557bfc0011ef2ea539
  ms.sourcegitcommit: 3b9b7ae6771712337d40374d2fef6b25b0d53df6
  ms.translationtype: HT
  ms.contentlocale: de-DE
  ms.lasthandoff: 01/04/2019
  ms.locfileid: "54030411"
items:
- durationInMinutes: 2
  content: >
    <span data-ttu-id="7dd56-106">In diesem Tutorial wird erläutert, wie Sie die [Zeichenfolgeninterpolation](../../language-reference/tokens/interpolated.md) verwenden können, um Werte in eine einzige Zeichenfolge einzufügen.</span><span class="sxs-lookup"><span data-stu-id="7dd56-106">This tutorial teaches you how to use [string interpolation](../../language-reference/tokens/interpolated.md) to insert values into a single string.</span></span> <span data-ttu-id="7dd56-107">Sie lernen auch, wie Sie die Textformatierung der Ergebniszeichenfolge steuern können.</span><span class="sxs-lookup"><span data-stu-id="7dd56-107">You also learn how to control text formatting of the result string.</span></span> <span data-ttu-id="7dd56-108">Verwenden Sie Ihren Browser zum Schreiben und Ausführen von C#-Code. Dort werden Ihnen unmittelbar die Ergebnisse angezeigt.</span><span class="sxs-lookup"><span data-stu-id="7dd56-108">You use your browser to write and run C# code and can immediately see the results.</span></span>
- title: <span data-ttu-id="7dd56-109">Erstellen einer interpolierten Zeichenfolge</span><span class="sxs-lookup"><span data-stu-id="7dd56-109">Create an interpolated string</span></span>
  durationInMinutes: 2
  content: >
    <span data-ttu-id="7dd56-110">Führen Sie den folgenden Code im interaktiven Fenster aus.</span><span class="sxs-lookup"><span data-stu-id="7dd56-110">Run the following code in the interactive window.</span></span> <span data-ttu-id="7dd56-111">Geben Sie hierfür den Code in das interaktive Fenster ein (ersetzen Sie `<name>` mit Ihrem Namen), und klicken Sie auf die Schaltfläche **Ausführen**:</span><span class="sxs-lookup"><span data-stu-id="7dd56-111">To do that, type the code in the interactive window (replace `<name>` with your name) and select **Run**:</span></span>


    ```csharp

    var name = "<name>";

    Console.WriteLine($"Hello, {name}. It's a pleasure to meet you!");

    ```


    <span data-ttu-id="7dd56-112">Wenn Sie den Code ausführen, zeigt die **Ausgabe** eine Zeichenfolge an, die Ihren Namen in der Begrüßung enthält.</span><span class="sxs-lookup"><span data-stu-id="7dd56-112">When you run the code, **Output** displays a string that includes your name in the greeting.</span></span> <span data-ttu-id="7dd56-113">Das Zeichenfolgenargument des Methodenaufrufs <xref:System.Console.WriteLine%2A> ist eine *interpolierte Zeichenfolge*.</span><span class="sxs-lookup"><span data-stu-id="7dd56-113">The string argument of the <xref:System.Console.WriteLine%2A> method call is an *interpolated string*.</span></span> <span data-ttu-id="7dd56-114">Dabei handelt es sich um eine Vorlage, durch die Sie eine einzelne Zeichenfolge (als *Ergebniszeichenfolge* bezeichnet) aus einer Zeichenfolge erstellen können, die eingebetteten Code enthält.</span><span class="sxs-lookup"><span data-stu-id="7dd56-114">It's a kind of template that lets you construct a single string (called the *result string*) from a string that includes embedded code.</span></span> <span data-ttu-id="7dd56-115">Interpolierte Zeichenfolgen sind besonders nützlich für das Einfügen von Werten in eine Zeichenfolge oder zum Verketten (bzw. Verknüpfen) von mehreren Zeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="7dd56-115">Interpolated strings are particularly useful for inserting values into a string or concatenating (joining together) several strings.</span></span>


    <span data-ttu-id="7dd56-116">Das obige Beispiel enthält die zwei Elemente, über die jede interpolierte Zeichenfolge verfügen muss:</span><span class="sxs-lookup"><span data-stu-id="7dd56-116">The example above contains the two elements that every interpolated string must have:</span></span>


    - <span data-ttu-id="7dd56-117">Ein Zeichenfolgenliteral, das ein `$`-Zeichen vor dem öffnenden Anführungszeichen enthält.</span><span class="sxs-lookup"><span data-stu-id="7dd56-117">A string literal that begins with the `$` character before its opening quotation mark character.</span></span> <span data-ttu-id="7dd56-118">Zwischen dem `$`-Symbol und dem Anführungszeichen darf kein Leerraum vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="7dd56-118">There can't be any spaces between the `$` symbol and the quotation mark character.</span></span> <span data-ttu-id="7dd56-119">(Wenn Sie sehen möchten, was geschieht, wenn Sie einen Leerzeichen einfügen, fügen Sie nach dem `$`-Zeichen im interaktiven Fenster eins ein, und führen Sie dann den Code aus.</span><span class="sxs-lookup"><span data-stu-id="7dd56-119">(If you'd like to see what happens if you include one, insert a space after the `$` character in the interactive window and run the updated code.</span></span> <span data-ttu-id="7dd56-120">Dann gibt der C#-Compiler den Fehler „Unerwartetes Zeichen ‚$‘“ zurück.)</span><span class="sxs-lookup"><span data-stu-id="7dd56-120">The C# compiler complains, "Unexpected character '$'".)</span></span>


    - <span data-ttu-id="7dd56-121">Mindestens ein *interpolierter Ausdruck*.</span><span class="sxs-lookup"><span data-stu-id="7dd56-121">One or more *interpolated expressions*.</span></span> <span data-ttu-id="7dd56-122">Ein interpolierter Ausdruck wird durch eine öffnende und eine schließende Klammer (`{` und `}`) angegeben.</span><span class="sxs-lookup"><span data-stu-id="7dd56-122">An interpolated expression is indicated by an opening and closing brace (`{` and `}`).</span></span> <span data-ttu-id="7dd56-123">Sie können jeden C#-Ausdruck in die Klammern einfügen, der einen Wert (einschließlich `null`) zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="7dd56-123">You can put any C# expression that returns a value (including `null`) inside the braces.</span></span>


    <span data-ttu-id="7dd56-124">Im Folgenden finden Sie weitere Beispiele für die Zeichenfolgeninterpolation mit einigen anderen Datentypen.</span><span class="sxs-lookup"><span data-stu-id="7dd56-124">Let's try a few more string interpolation examples with some other data types.</span></span>


    > [!NOTE]

    > <span data-ttu-id="7dd56-125">Dieses Onlinecodierungstutorial befindet sich im Vorschaumodus.</span><span class="sxs-lookup"><span data-stu-id="7dd56-125">This online coding experience is in preview mode.</span></span> <span data-ttu-id="7dd56-126">Wenn Probleme auftreten, melden Sie diese [im dotnet/try-Repository](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="7dd56-126">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="7dd56-127">Einschließen verschiedener Datentypen</span><span class="sxs-lookup"><span data-stu-id="7dd56-127">Include different data types</span></span>
  durationInMinutes: 5
  content: >
    <span data-ttu-id="7dd56-128">Im vorherigen Schritt haben Sie die Zeichenfolgeninterpolation verwendet, um eine Zeichenfolge in eine andere einzufügen.</span><span class="sxs-lookup"><span data-stu-id="7dd56-128">In the previous step, you used string interpolation to insert one string inside of another.</span></span> <span data-ttu-id="7dd56-129">Das Ergebnis eines interpolierten Ausdrucks kann jedoch jeden Datentyp aufweisen.</span><span class="sxs-lookup"><span data-stu-id="7dd56-129">The result of an interpolated expression can be of any data type, though.</span></span> <span data-ttu-id="7dd56-130">Im Folgenden werden mehrere Datentypen in eine interpolierte Zeichenfolge einbezogen.</span><span class="sxs-lookup"><span data-stu-id="7dd56-130">Let's include values of various data types in an interpolated string.</span></span>


    <span data-ttu-id="7dd56-131">Im folgenden Beispiel wird zunächst ein [Klassen](../../programming-guide/classes-and-structs/classes.md)-Datentyp `Vegetable` definiert, der über die [Eigenschaft](../../properties.md) `Name` und die [Methode](../../methods.md) `ToString` verfügt. Diese Methode [überschreibt](../../language-reference/keywords/override.md) das Verhalten der <xref:System.Object.ToString?displayProperty=nameWithType>-Methode.</span><span class="sxs-lookup"><span data-stu-id="7dd56-131">In the following example, we first define a [class](../../programming-guide/classes-and-structs/classes.md) data type `Vegetable` that has a `Name` [property](../../properties.md) and a `ToString` [method](../../methods.md), which [overrides](../../language-reference/keywords/override.md) the behavior of the <xref:System.Object.ToString?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="7dd56-132">Der [`public`-Zugriffsmodifizierer](../../language-reference/keywords/public.md) stellt diese Methode jedem Clientcode zur Verfügung, um die Zeichenfolgendarstellung einer `Vegetable`-Instanz abzurufen.</span><span class="sxs-lookup"><span data-stu-id="7dd56-132">The [`public` access modifier](../../language-reference/keywords/public.md) makes that method available to any client code to get the string representation of a `Vegetable` instance.</span></span> <span data-ttu-id="7dd56-133">Im Beispiel gibt die Methode `Vegetable.ToString` den Wert der Eigenschaft `Name` zurück, die beim [Konstruktor](../../programming-guide/classes-and-structs/constructors.md) `Vegetable` initialisiert wird: `Vegetable(string name) => Name = name;`.</span><span class="sxs-lookup"><span data-stu-id="7dd56-133">In the example the `Vegetable.ToString` method returns the value of the `Name` property that is initialized at the `Vegetable` [constructor](../../programming-guide/classes-and-structs/constructors.md): `Vegetable(string name) => Name = name;`.</span></span> <span data-ttu-id="7dd56-134">Dann erstellen wir eine Instanz der Klasse `Vegetable` namens `item`, indem wir das [`new`-Schlüsselwort](../../language-reference/keywords/new-operator.md) verwenden und einen Namen für den Konstruktor `Vegetable` angeben.</span><span class="sxs-lookup"><span data-stu-id="7dd56-134">Then we create an instance of the `Vegetable` class named `item` by using the [`new` keyword](../../language-reference/keywords/new-operator.md) and providing a name for the constructor `Vegetable`.</span></span> <span data-ttu-id="7dd56-135">Letztendlich wird diese Instanz in einer interpolierten Zeichenfolge enthalten, die auch einen <xref:System.DateTime>-Wert, <xref:System.Decimal>-Wert und einen [Enumerationswert](../../programming-guide/enumeration-types.md) `Unit` enthält.</span><span class="sxs-lookup"><span data-stu-id="7dd56-135">Finally, we include that instance into an interpolated string that also contains a <xref:System.DateTime> value, a <xref:System.Decimal> value, and a `Unit` [enumeration](../../programming-guide/enumeration-types.md) value.</span></span> <span data-ttu-id="7dd56-136">Führen Sie den folgenden Code im interaktiven Fenster aus:</span><span class="sxs-lookup"><span data-stu-id="7dd56-136">Run the following code in the interactive window:</span></span>


    ```csharp

    public class Vegetable

    {
       public Vegetable(string name) => Name = name;

       public string Name { get; }

       public override string ToString() => Name;
    }


    public enum Unit { item, kilogram, gram, dozen };


    var item = new Vegetable("eggplant");

    var date = DateTime.Now;

    var price = 1.99m;

    var unit = Unit.item;

    Console.WriteLine($"On {date}, the price of {item} was {price} per {unit}.");

    ```


    <span data-ttu-id="7dd56-137">Beachten Sie, dass der interpolierte Ausdruck `item` in der interpolierten Zeichenfolge zu dem Text „eggplant“ in der Ergebniszeichenfolge aufgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="7dd56-137">Note that the interpolated expression `item` in the interpolated string resolves to the text "eggplant" in the result string.</span></span> <span data-ttu-id="7dd56-138">Dies liegt daran, dass der Ausdruckergebnistyp keine Zeichenfolge ist. Daher wird das Ergebnis auf folgende Weise zu einer Zeichenfolge aufgelöst:</span><span class="sxs-lookup"><span data-stu-id="7dd56-138">That's because, when the type of the expression result is not a string, the result is resolved to a string in the following way:</span></span>


    - <span data-ttu-id="7dd56-139">Wenn der interpolierte Ausdruck `null` ergibt, wird eine leere Zeichenfolge („“ oder <xref:System.String.Empty?displayProperty=nameWithType>) verwendet.</span><span class="sxs-lookup"><span data-stu-id="7dd56-139">If the interpolated expression evaluates to `null`, an empty string ("", or <xref:System.String.Empty?displayProperty=nameWithType>) is used.</span></span>


    - <span data-ttu-id="7dd56-140">Wenn der interpolierte Ausdruck nicht `null` ergibt, wird in der Regel die Methode `ToString` des Ergebnistyps aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="7dd56-140">If the interpolated expression doesn't evaluate to `null`, typically the `ToString` method of the result type is called.</span></span> <span data-ttu-id="7dd56-141">Sie können dies testen, indem Sie die Implementierung der Methode `Vegetable.ToString` aktualisieren.</span><span class="sxs-lookup"><span data-stu-id="7dd56-141">You can test this by updating the implementation of the `Vegetable.ToString` method.</span></span> <span data-ttu-id="7dd56-142">Sie müssen die Methode `ToString` nicht einmal implementieren, da jeder Typ auf die eine oder andere Art über eine Implementierung dieser Methode verfügt.</span><span class="sxs-lookup"><span data-stu-id="7dd56-142">You might not even need to implement the `ToString` method since every type has some implementation of this method.</span></span> <span data-ttu-id="7dd56-143">Sie können dies testen, indem Sie die Definition der Methode `Vegetable.ToString` im Beispiel auskommentieren (fügen Sie hierzu davor ein Kommentarsymbol `//` ein).</span><span class="sxs-lookup"><span data-stu-id="7dd56-143">To test this, comment out the definition of the `Vegetable.ToString` method in the example (to do that, put a comment symbol, `//`, in front of it).</span></span> <span data-ttu-id="7dd56-144">In der Ausgabe wird die Zeichenfolge „eggplant“ durch den vollqualifizierten Typnamen (der neben dem Typnamen von der C#-REPL definierte Namespace) ersetzt. Dabei handelt es sich um das Standardverhalten der <xref:System.Object.ToString?displayProperty=nameWithType>-Methode.</span><span class="sxs-lookup"><span data-stu-id="7dd56-144">In the output, the string "eggplant" is replaced by the fully qualified type name (the namespace defined by the C# REPL along with the type name), which is the default behavior of the <xref:System.Object.ToString?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="7dd56-145">Das Standardverhalten der Methode `ToString` für einen Enumerationswert besteht darin, die Zeichenfolgendarstellung eines Werts zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="7dd56-145">The default behavior of the `ToString` method for an enumeration value is to return the string representation of the value.</span></span>


    <span data-ttu-id="7dd56-146">Bei der Ausgabe dieses Beispielcodes ist das Datum zu genau angegeben (der Preis von Auberginen ändert sich nicht sekündlich), und der Wert der Variablen „price“ gibt keine Währungsinformation an.</span><span class="sxs-lookup"><span data-stu-id="7dd56-146">In the output from this example, the date is too precise (the price of eggplant doesn't change every second), and the price value doesn't indicate a unit of currency.</span></span> <span data-ttu-id="7dd56-147">Im nächsten Schritt erfahren Sie, wie Sie diese Probleme beheben, indem Sie das Format der Zeichenfolgendarstellung der Ergebnisse des Ausdrucks steuern.</span><span class="sxs-lookup"><span data-stu-id="7dd56-147">In the next step, you'll learn how to fix those issues by controlling the format of string representations of the expression results.</span></span>


    > [!NOTE]

    > <span data-ttu-id="7dd56-148">Dieses Onlinecodierungstutorial befindet sich im Vorschaumodus.</span><span class="sxs-lookup"><span data-stu-id="7dd56-148">This online coding experience is in preview mode.</span></span> <span data-ttu-id="7dd56-149">Wenn Probleme auftreten, melden Sie diese [im dotnet/try-Repository](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="7dd56-149">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="7dd56-150">Steuern der Formatierung von interpolierten Ausdrücken</span><span class="sxs-lookup"><span data-stu-id="7dd56-150">Control the formatting of interpolated expressions</span></span>
  durationInMinutes: 5
  content: >
    <span data-ttu-id="7dd56-151">Im vorherigen Schritt wurden zwei fehlerhaft formatierte Zeichenfolgen in die Ergebniszeichenfolge eingefügt.</span><span class="sxs-lookup"><span data-stu-id="7dd56-151">In the previous step, two poorly formatted strings were inserted into the result string.</span></span> <span data-ttu-id="7dd56-152">Bei einer davon handelte es sich um einen Datums- und Uhrzeitwert, bei dem nur das Datum relevant war.</span><span class="sxs-lookup"><span data-stu-id="7dd56-152">One was a date and time value for which only the date was appropriate.</span></span> <span data-ttu-id="7dd56-153">Bei der zweiten handelte es sich um einen Preis, bei dem keine Währungseinheit angegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="7dd56-153">The second was a price that didn't indicate its unit of currency.</span></span> <span data-ttu-id="7dd56-154">Beide Probleme sind einfach zu beheben.</span><span class="sxs-lookup"><span data-stu-id="7dd56-154">Both issues are easy to address.</span></span> <span data-ttu-id="7dd56-155">Mithilfe der Zeichenfolgeninterpolation können Sie *Formatzeichenfolgen* angeben, die die Formatierung bestimmter Typen steuern.</span><span class="sxs-lookup"><span data-stu-id="7dd56-155">String interpolation lets you specify *format strings* that control the formatting of particular types.</span></span> <span data-ttu-id="7dd56-156">Ändern Sie den Aufruf von `Console.WriteLine` im vorherigen Beispiel, damit die Formatzeichenfolgen für die Ausdrücke „date“ und „price,“ wie in der folgenden Zeile dargestellt, enthalten sind:</span><span class="sxs-lookup"><span data-stu-id="7dd56-156">Modify the call to `Console.WriteLine` from the previous example to include the format strings for the date and price expressions as shown in the following line:</span></span>


    ```csharp

    Console.WriteLine($"On {date:d}, the price of {item} was {price:C2} per {unit}.");

    ```


    <span data-ttu-id="7dd56-157">Sie können eine Formatzeichenfolge angeben, indem Sie dem interpolierten Ausdruck einen Doppelpunkt („:“) und die Formatzeichenfolge anfügen.</span><span class="sxs-lookup"><span data-stu-id="7dd56-157">You specify a format string by following the interpolated expression with a colon (":") and the format string.</span></span> <span data-ttu-id="7dd56-158">Bei „d“ handelt es sich um eine [Zeichenfolge für das Standardformat für Datum und Uhrzeit](../../../standard/base-types/standard-date-and-time-format-strings.md#the-short-date-d-format-specifier), die das kurze Datumsformat darstellt.</span><span class="sxs-lookup"><span data-stu-id="7dd56-158">"d" is a [standard date and time format string](../../../standard/base-types/standard-date-and-time-format-strings.md#the-short-date-d-format-specifier) that represents the short date format.</span></span> <span data-ttu-id="7dd56-159">Bei „C2“ handelt es sich um eine [Zeichenfolge für das numerische Standardformat](../../../standard/base-types/standard-numeric-format-strings.md#the-currency-c-format-specifier), die eine Zahl als Währungswert mit zwei Ziffern nach dem Dezimaltrennzeichen darstellt.</span><span class="sxs-lookup"><span data-stu-id="7dd56-159">"C2" is a [standard numeric format string](../../../standard/base-types/standard-numeric-format-strings.md#the-currency-c-format-specifier) that represents a number as a currency value with two digits after the decimal point.</span></span>


    <span data-ttu-id="7dd56-160">Einige Typen in den .NET-Bibliotheken unterstützen einen vordefinierten Satz von Formatzeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="7dd56-160">A number of types in the .NET libraries support a predefined set of format strings.</span></span> <span data-ttu-id="7dd56-161">Darin sind alle numerischen Typen sowie alle Datums- und Uhrzeittypen enthalten.</span><span class="sxs-lookup"><span data-stu-id="7dd56-161">These include all the numeric types and the date and time types.</span></span> <span data-ttu-id="7dd56-162">Eine vollständige Liste der Typen, die Formatzeichenfolgen unterstützen, finden Sie im Artikel [Formatieren von Typen in .NET](../../../standard/base-types/formatting-types.md) unter [Format Strings and .NET Class Library Types (Formatzeichenfolgen und .NET-Klassenbibliothekstypen)](../../../standard/base-types/formatting-types.md#stringRef).</span><span class="sxs-lookup"><span data-stu-id="7dd56-162">For a complete list of types that support format strings, see [Format Strings and .NET Class Library Types](../../../standard/base-types/formatting-types.md#stringRef) in the [Formatting Types in .NET](../../../standard/base-types/formatting-types.md) article.</span></span>


    <span data-ttu-id="7dd56-163">Versuchen Sie, die Formatzeichenfolgen im Beispiel zu verändern, um zu sehen, welche Auswirkungen sie auf die Formatierung des Datums, der Zeit und des numerischen Werts haben.</span><span class="sxs-lookup"><span data-stu-id="7dd56-163">Try modifying the format strings in the example to see how they affect the formatting of the date and time and the numeric value.</span></span> <span data-ttu-id="7dd56-164">Ändern Sie „d“ in `{date:d}` in „t“ (um das kurze Uhrzeitformat anzuzeigen) sowie in „y“ (um das Jahr und den Monat anzuzeigen) und in „yyyy“ (um das Jahr als vierstellige Zahl anzuzeigen).</span><span class="sxs-lookup"><span data-stu-id="7dd56-164">Change the "d" in `{date:d}` to "t" (to display the short time format), "y" (to display the year and month), and "yyyy" (to display the year as a four-digit number).</span></span> <span data-ttu-id="7dd56-165">Ändern Sie „C2“ in `{price:C2}` in „e“ (für die Exponentialschreibweise) und in „F3“ (für einen numerischen Wert mit drei Ziffern nach dem Dezimaltrennzeichen).</span><span class="sxs-lookup"><span data-stu-id="7dd56-165">Change the "C2" in `{price:C2}` to "e" (for exponential notation) and "F3" (for a numeric value with three digits after the decimal point).</span></span>


    <span data-ttu-id="7dd56-166">Sie können zusätzlich zum Steuern der Formatierung auch die Feldbreite und die Ausrichtung der formatierten Zeichenfolgen steuern, die in der Ergebniszeichenfolge enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="7dd56-166">In addition to controlling formatting, you can also control the field width and alignment of the formatted strings that are included in the result string.</span></span> <span data-ttu-id="7dd56-167">Im nächsten Schritt erfahren Sie mehr zu diesem Thema.</span><span class="sxs-lookup"><span data-stu-id="7dd56-167">In the next step, you'll learn how to do this.</span></span>


    > [!NOTE]

    > <span data-ttu-id="7dd56-168">Dieses Onlinecodierungstutorial befindet sich im Vorschaumodus.</span><span class="sxs-lookup"><span data-stu-id="7dd56-168">This online coding experience is in preview mode.</span></span> <span data-ttu-id="7dd56-169">Wenn Probleme auftreten, melden Sie diese [im dotnet/try-Repository](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="7dd56-169">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- title: <span data-ttu-id="7dd56-170">Steuern der Feldbreite und der Ausrichtung von interpolierten Ausdrücken</span><span class="sxs-lookup"><span data-stu-id="7dd56-170">Control the field width and alignment of interpolated expressions</span></span>
  durationInMinutes: 6
  content: >
    <span data-ttu-id="7dd56-171">Wenn das Ergebnis eines interpolierten Ausdrucks als Zeichenfolge formatiert wird, wird diese Zeichenfolge normalerweise in eine Ergebniszeichenfolge ohne führende oder nachgestellte Leerzeichen einbezogen.</span><span class="sxs-lookup"><span data-stu-id="7dd56-171">Ordinarily, when the result of an interpolated expression is formatted to string, that string is included in a result string without leading or trailing spaces.</span></span> <span data-ttu-id="7dd56-172">Die Feldbreite und Ausrichtung des Texts steuern zu können, ist insbesondere bei der Arbeit mit Daten hilfreich, um eine besser lesbare Ausgabe zu erzeugen.</span><span class="sxs-lookup"><span data-stu-id="7dd56-172">Particularly when you work with a set of data, being able to control a field width and text alignment helps to produce a more readable output.</span></span> <span data-ttu-id="7dd56-173">Wenn Ihnen dies angezeigt werden soll, führen Sie den folgenden Code aus:</span><span class="sxs-lookup"><span data-stu-id="7dd56-173">To see this, run the following code:</span></span>


    ```csharp
      var inventory = new Dictionary<string, int>()
      {
          ["hammer, ball pein"] = 18,
          ["hammer, cross pein"] = 5,
          ["screwdriver, Phillips #2"] = 14
      };

      Console.WriteLine($"Inventory on {DateTime.Now:d}");
      Console.WriteLine(" ");
      Console.WriteLine($"|{"Item",-25}|{"Quantity",10}|");
      foreach (var item in inventory)
         Console.WriteLine($"|{item.Key,-25}|{item.Value,10}|");
    ```


    <span data-ttu-id="7dd56-174">Die Elementnamen sind linksbündig ausgerichtet. Die Mengen sind rechtsbündig ausgerichtet.</span><span class="sxs-lookup"><span data-stu-id="7dd56-174">The item names are left-aligned, and their quantities are right-aligned.</span></span> <span data-ttu-id="7dd56-175">Sie können die Ausrichtung festlegen, indem Sie einem interpolierten Ausdruck ein Komma („,“) anfügen und die *minimale* Feldbreite angeben.</span><span class="sxs-lookup"><span data-stu-id="7dd56-175">You specify the alignment by adding a comma (",") after an interpolated expression and designating the *minimum* field width.</span></span> <span data-ttu-id="7dd56-176">Wenn der angegebene Wert eine positive Zahl ist, wird das Feld rechtsbündig ausgerichtet.</span><span class="sxs-lookup"><span data-stu-id="7dd56-176">If the specified value is a positive number, the field is right-aligned.</span></span> <span data-ttu-id="7dd56-177">Wenn er eine negative Zahl ist, wird das Feld linksbündig ausgerichtet.</span><span class="sxs-lookup"><span data-stu-id="7dd56-177">If it is a negative number, the field is left-aligned.</span></span>


    <span data-ttu-id="7dd56-178">Versuchen Sie die negativen Vorzeichen aus dem Code `{"Item",-25}` und `{item.Key,-25}` zu entfernen, und führen Sie das Beispiel erneut aus.</span><span class="sxs-lookup"><span data-stu-id="7dd56-178">Try removing the negative signs from the `{"Item",-25}` and `{item.Key,-25}` code and run the example again.</span></span> <span data-ttu-id="7dd56-179">In diesem Fall sind die Elementnamen rechtsbündig ausgerichtet.</span><span class="sxs-lookup"><span data-stu-id="7dd56-179">This time, the item names are right-aligned.</span></span>


    <span data-ttu-id="7dd56-180">Sie können einen Ausrichtungsspezifizierer und eine Formatzeichenfolge für einen einzigen interpolierten Ausdruck kombinieren.</span><span class="sxs-lookup"><span data-stu-id="7dd56-180">You can combine an alignment specifier and a format string for a single interpolated expression.</span></span> <span data-ttu-id="7dd56-181">Geben Sie dazu zunächst die Ausrichtung gefolgt von einem Doppelpunkt und der Formatzeichenfolge an.</span><span class="sxs-lookup"><span data-stu-id="7dd56-181">To do that, specify the alignment first, followed by a colon and the format string.</span></span> <span data-ttu-id="7dd56-182">Testen Sie den folgenden Code, der drei formatierte Zeichenfolgen mit definierten Feldbreiten darstellt:</span><span class="sxs-lookup"><span data-stu-id="7dd56-182">Try the following code that displays three formatted strings with defined field widths:</span></span>


    ```csharp

    Console.WriteLine($"[{DateTime.Now,-20:d}] Hour [{DateTime.Now,-10:HH}] [{1063.342,15:N2}] feet");

    ```


    > [!NOTE]

    > <span data-ttu-id="7dd56-183">Dieses Onlinecodierungstutorial befindet sich im Vorschaumodus.</span><span class="sxs-lookup"><span data-stu-id="7dd56-183">This online coding experience is in preview mode.</span></span> <span data-ttu-id="7dd56-184">Wenn Probleme auftreten, melden Sie diese [im dotnet/try-Repository](https://github.com/dotnet/try/issues).</span><span class="sxs-lookup"><span data-stu-id="7dd56-184">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>
- content: >-
    <span data-ttu-id="7dd56-185">Sie haben das interaktive Tutorial für die Zeichenfolgeninterpolation abgeschlossen.</span><span class="sxs-lookup"><span data-stu-id="7dd56-185">You've completed the string interpolation interactive tutorial.</span></span> <span data-ttu-id="7dd56-186">Klicken sie unten auf den Link **Sammlungen in C#**, um das nächste interaktive Tutorial zu starten, oder besuchen sie die [.NET-Website](https://www.microsoft.com/net/learn/dotnet/hello-world-tutorial), um das .NET Core SDK herunterzuladen, ein Projekt auf Ihrem Computer zu erstellen und weiter zu programmieren.</span><span class="sxs-lookup"><span data-stu-id="7dd56-186">You can click the **Collections in C#** link below to start the next interactive tutorial, or you can visit the [.NET site](https://www.microsoft.com/net/learn/dotnet/hello-world-tutorial) to download the .NET Core SDK, create a project on your machine, and keep coding.</span></span> <span data-ttu-id="7dd56-187">Über den Schritt „Weiterlernen“ gelangen Sie wieder zu diesen Tutorials.</span><span class="sxs-lookup"><span data-stu-id="7dd56-187">The "Keep Learning" step brings you back to these tutorials.</span></span>


    <span data-ttu-id="7dd56-188">Weitere Informationen finden Sie unter [Zeichenfolgeninterpolation](../../language-reference/tokens/interpolated.md).</span><span class="sxs-lookup"><span data-stu-id="7dd56-188">For more information, see [String interpolation](../../language-reference/tokens/interpolated.md).</span></span>
